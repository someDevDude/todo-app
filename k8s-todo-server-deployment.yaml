# apiVersion: v1
# kind: Service
# metadata:
#   name: todo-server-service
#   namespace: default
#   labels:
#     app: todo-server-service
# spec:
#   selector:
#     app: todo-server
#   type: NodePort
#   ports:
#   - name: web
#     port: 8080
#     targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-server
  labels:
    app: todo-app
    tier: server
spec:
  selector:
    matchLabels:
      app: todo-app
      tier: server
  replicas: 1
  template:
    metadata:
      labels:
        app: todo-app
        tier: server
    spec:
      containers:
      - name: todo-app
        image: docker.io/somedevdude/todo-server
        env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-config
              key: dbUser
        - name: DB_PW
          valueFrom:
            secretKeyRef:
              name: db-config
              key: dbPw
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: db-config
              key: dbName
        - name: DB_URL
          value: todo-database-service
        livenessProbe:
          httpGet:
              path: /healthcheck
              port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
          - containerPort: 8080
            protocol: TCP 
        volumeMounts:
        - name: todo-persistent-storage
          mountPath: /todo/log
      volumes:
      - name: todo-persistent-storage
        persistentVolumeClaim:
          claimName: todo-pv-log-claim